/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt { flavor = "tap-preferred"; };

/ {
    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp Q           &kp W           &kp E               &kp R             &kp T    &kp Y  &kp U              &kp I                &kp O            &mt BACKSLASH P
&mt LEFT_GUI A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G    &kp H  &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMICOLON
&kp Z           &kp X           &kp C               &kp V             &kp B    &kp N  &kp M              &kp COMMA            &kp DOT          &mt SLASH SQT
&lt 1 ESCAPE    &lt 2 TAB       &kp SPACE                                                                &kp RET              &lt 3 BACKSPACE  &lt 4 DELETE
            >;
        };

        MISC {
            bindings = <
&studio_unlock  &none     &none      &none      &none    &out OUT_TOG  &bt BT_CLR    &bt BT_SEL 0       &bt BT_SEL 1     &bt BT_SEL 2
&kp LGUI        &kp LALT  &kp LCTRL  &kp LSHFT  &none    &kp K_PP      &kp C_BRI_DN  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRI_UP
&none           &none     &none      &none      &none    &none         &none         &none              &none            &none
&none           &none     &none                                                      &none              &none            &none
            >;
        };

        NAV {
            bindings = <
&studio_unlock  &none     &none      &none      &none            &none         &none     &none          &none          &none
&kp LGUI        &kp LALT  &kp LCTRL  &kp LSHFT  &none            &kp CAPSLOCK  &kp LEFT  &kp DOWN       &kp UP_ARROW   &kp RIGHT
&none           &none     &none      &none      &kp BACKSPACE    &kp INSERT    &kp HOME  &kp PAGE_DOWN  &kp PG_UP      &kp END
&none           &none     &none                                                          &kp ENTER      &kp BACKSPACE  &kp DELETE
            >;
        };

        NUM {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp MINUS    &none  &none      &none      &none     &none
&kp LBKT   &kp N4  &kp N5  &kp N6  &kp EQUAL    &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&kp RBKT   &kp N7  &kp N8  &kp N9  &kp N0       &none  &none      &none      &none     &none
&none      &none   &none                                          &none      &none     &none
            >;
        };

        FUNC {
            bindings = <
&kp F1      &kp F2   &kp F3           &kp F4    &kp F5             &none  &none      &none      &none     &none
&kp F6      &kp F7   &kp F8           &kp F9    &kp F10            &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&kp F11     &kp F12  &kp PRINTSCREEN  &kp SLCK  &kp PAUSE_BREAK    &none  &none      &none      &none     &none
&kp ESCAPE  &kp TAB  &kp SPACE                                                       &none      &none     &none
            >;
        };

        FPS {
            bindings = <
&kp TAB       &kp Q  &kp W      &kp E  &kp R    &kp T  &kp U  &kp I      &kp O     &kp P
&kp LSHFT     &kp A  &kp S      &kp D  &kp F    &kp G  &kp J  &kp K      &kp L     &kp SEMI
&kp LCTRL     &kp Z  &kp X      &kp C  &kp V    &kp B  &kp M  &kp COMMA  &kp DOT   &kp SQT
&kp LEFT_ALT  &to 6  &kp SPACE                                &kp RET    &kp BSPC  &kp DEL
            >;
        };

        FPS_UPPER {
            bindings = <
&kp ESCAPE  &kp N1  &trans  &kp N2  &kp N3    &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &kp N4    &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
